{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioChunks, setAudioChunks] = useState([]);\n  const [transcriptions, setTranscriptions] = useState([]);\n  const [error, setError] = useState(null);\n  const [deviceStatus, setDeviceStatus] = useState('unchecked'); // 'unchecked' | 'available' | 'unavailable'\n  const mediaRecorder = useRef(null);\n  const chunkInterval = useRef(null);\n  useEffect(() => {\n    // Load existing transcriptions\n    fetchTranscriptions();\n\n    // Check for audio device availability\n    checkAudioDevice();\n  }, []);\n  const checkAudioDevice = async () => {\n    try {\n      // First request permission\n      await navigator.mediaDevices.getUserMedia({\n        audio: true\n      }).then(stream => {\n        // Stop the stream immediately\n        stream.getTracks().forEach(track => track.stop());\n        setDeviceStatus('available');\n        setError(null);\n      }).catch(err => {\n        console.error('Permission error:', err);\n        setDeviceStatus('unavailable');\n        setError('Microphone permission denied. Please allow microphone access.');\n        return false;\n      });\n\n      // Then check available devices\n      const devices = await navigator.mediaDevices.enumerateDevices();\n      const hasAudioDevice = devices.some(device => device.kind === 'audioinput');\n      if (!hasAudioDevice) {\n        setDeviceStatus('unavailable');\n        setError('No audio input device found. Please connect a microphone.');\n        return false;\n      }\n      return true;\n    } catch (err) {\n      console.error('Device check error:', err);\n      setDeviceStatus('unavailable');\n      setError('Could not access audio devices. Please check permissions.');\n      return false;\n    }\n  };\n  const fetchTranscriptions = async () => {\n    try {\n      const response = await fetch('http://localhost:55285/transcriptions');\n      const data = await response.json();\n      setTranscriptions(data);\n    } catch (error) {\n      console.error('Error fetching transcriptions:', error);\n    }\n  };\n  const startRecording = async () => {\n    try {\n      setError(null);\n      if (deviceStatus !== 'available') {\n        await checkAudioDevice();\n        if (deviceStatus !== 'available') {\n          throw new Error('Audio device not available');\n        }\n      }\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n\n      // Try different MIME types\n      const mimeTypes = ['audio/webm', 'audio/webm;codecs=opus', 'audio/ogg;codecs=opus', 'audio/wav'];\n      let selectedMimeType = mimeTypes.find(type => MediaRecorder.isTypeSupported(type)) || 'audio/webm';\n      mediaRecorder.current = new MediaRecorder(stream, {\n        mimeType: selectedMimeType\n      });\n      mediaRecorder.current.ondataavailable = event => {\n        if (event.data.size > 0) {\n          setAudioChunks(chunks => [...chunks, event.data]);\n        }\n      };\n      mediaRecorder.current.onerror = event => {\n        setError('Recording error: ' + event.error.message);\n        stopRecording();\n      };\n      mediaRecorder.current.start(1000); // Capture every second for smoother experience\n      setIsRecording(true);\n\n      // Create 8-minute chunks\n      chunkInterval.current = setInterval(() => {\n        if (mediaRecorder.current && mediaRecorder.current.state === 'recording') {\n          mediaRecorder.current.stop();\n          mediaRecorder.current.start(1000);\n        }\n      }, 8 * 60 * 1000); // 8 minutes in milliseconds\n    } catch (error) {\n      console.error('Error accessing microphone:', error);\n      setError(error.message || 'Error accessing microphone');\n      setIsRecording(false);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorder.current) {\n      mediaRecorder.current.stop();\n      clearInterval(chunkInterval.current);\n      mediaRecorder.current.stream.getTracks().forEach(track => track.stop());\n    }\n    setIsRecording(false);\n  };\n  const uploadChunk = async chunk => {\n    try {\n      // Create a unique filename with timestamp\n      const timestamp = new Date().getTime();\n      const extension = chunk.type.includes('webm') ? 'webm' : chunk.type.includes('ogg') ? 'ogg' : chunk.type.includes('wav') ? 'wav' : 'audio';\n      const filename = `audio-chunk-${timestamp}.${extension}`;\n      const formData = new FormData();\n      formData.append('audio', chunk, filename);\n      const response = await fetch('http://localhost:55285/transcribe', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`HTTP error! status: ${response.status}, message: ${errorText}`);\n      }\n      const result = await response.json();\n      if (result.text && result.text.trim()) {\n        // Update transcriptions with new entry\n        setTranscriptions(prev => [{\n          ...result,\n          timestamp: new Date(result.timestamp).toISOString(),\n          filename: filename // Store filename for reference\n        }, ...prev]);\n\n        // Clear error if successful\n        setError(null);\n      } else {\n        console.warn('Empty transcription received');\n      }\n    } catch (error) {\n      console.error('Error uploading chunk:', error);\n      setError(`Error processing audio: ${error.message}`);\n\n      // Don't throw, just log and show error to user\n      return null;\n    }\n  };\n\n  // Process audio chunks\n  useEffect(() => {\n    const processChunk = async () => {\n      if (audioChunks.length > 0) {\n        const lastChunk = audioChunks[audioChunks.length - 1];\n        if (lastChunk.size > 0) {\n          await uploadChunk(lastChunk);\n        }\n      }\n    };\n    processChunk();\n  }, [audioChunks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"text-center mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-gray-800\",\n          children: \"Hindi Audio Transcription Tool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mt-2\",\n          children: \"Record and transcribe Hindi audio in real-time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-6 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-3 h-3 rounded-full mr-2 ${deviceStatus === 'available' ? 'bg-green-500' : deviceStatus === 'unavailable' ? 'bg-red-500' : 'bg-yellow-500'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: deviceStatus === 'available' ? 'Microphone Ready' : deviceStatus === 'unavailable' ? 'No Microphone' : 'Checking Device...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"block sm:inline\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center mb-6\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: isRecording ? stopRecording : startRecording,\n            disabled: deviceStatus !== 'available',\n            className: `px-6 py-3 rounded-full font-semibold text-white ${deviceStatus !== 'available' ? 'bg-gray-400 cursor-not-allowed' : isRecording ? 'bg-red-500 hover:bg-red-600' : 'bg-blue-500 hover:bg-blue-600'}`,\n            children: isRecording ? 'Stop Recording' : 'Start Recording'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center text-sm text-gray-600\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recording-indicator inline-block w-2 h-2 bg-red-500 rounded-full mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), \"Recording in progress... Audio will be processed in 8-minute chunks\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Transcriptions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: transcriptions.map((trans, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-b pb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-800\",\n              children: trans.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-500 mt-2\",\n              children: [new Date(trans.timestamp).toLocaleString(), \" - Duration: \", trans.duration, \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aFCIoH/SNjiF7BbcbFH4eYatvwU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","isRecording","setIsRecording","audioChunks","setAudioChunks","transcriptions","setTranscriptions","error","setError","deviceStatus","setDeviceStatus","mediaRecorder","chunkInterval","fetchTranscriptions","checkAudioDevice","navigator","mediaDevices","getUserMedia","audio","then","stream","getTracks","forEach","track","stop","catch","err","console","devices","enumerateDevices","hasAudioDevice","some","device","kind","response","fetch","data","json","startRecording","Error","mimeTypes","selectedMimeType","find","type","MediaRecorder","isTypeSupported","current","mimeType","ondataavailable","event","size","chunks","onerror","message","stopRecording","start","setInterval","state","clearInterval","uploadChunk","chunk","timestamp","Date","getTime","extension","includes","filename","formData","FormData","append","method","body","ok","errorText","text","status","result","trim","prev","toISOString","warn","processChunk","length","lastChunk","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","map","trans","index","toLocaleString","duration","_c","$RefreshReg$"],"sources":["/app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioChunks, setAudioChunks] = useState([]);\n  const [transcriptions, setTranscriptions] = useState([]);\n  const [error, setError] = useState(null);\n  const [deviceStatus, setDeviceStatus] = useState('unchecked'); // 'unchecked' | 'available' | 'unavailable'\n  const mediaRecorder = useRef(null);\n  const chunkInterval = useRef(null);\n\n  useEffect(() => {\n    // Load existing transcriptions\n    fetchTranscriptions();\n    \n    // Check for audio device availability\n    checkAudioDevice();\n  }, []);\n\n  const checkAudioDevice = async () => {\n    try {\n      // First request permission\n      await navigator.mediaDevices.getUserMedia({ audio: true })\n        .then(stream => {\n          // Stop the stream immediately\n          stream.getTracks().forEach(track => track.stop());\n          setDeviceStatus('available');\n          setError(null);\n        })\n        .catch(err => {\n          console.error('Permission error:', err);\n          setDeviceStatus('unavailable');\n          setError('Microphone permission denied. Please allow microphone access.');\n          return false;\n        });\n\n      // Then check available devices\n      const devices = await navigator.mediaDevices.enumerateDevices();\n      const hasAudioDevice = devices.some(device => device.kind === 'audioinput');\n      \n      if (!hasAudioDevice) {\n        setDeviceStatus('unavailable');\n        setError('No audio input device found. Please connect a microphone.');\n        return false;\n      }\n\n      return true;\n    } catch (err) {\n      console.error('Device check error:', err);\n      setDeviceStatus('unavailable');\n      setError('Could not access audio devices. Please check permissions.');\n      return false;\n    }\n  };\n\n  const fetchTranscriptions = async () => {\n    try {\n      const response = await fetch('http://localhost:55285/transcriptions');\n      const data = await response.json();\n      setTranscriptions(data);\n    } catch (error) {\n      console.error('Error fetching transcriptions:', error);\n    }\n  };\n\n  const startRecording = async () => {\n    try {\n      setError(null);\n      \n      if (deviceStatus !== 'available') {\n        await checkAudioDevice();\n        if (deviceStatus !== 'available') {\n          throw new Error('Audio device not available');\n        }\n      }\n\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      \n      // Try different MIME types\n      const mimeTypes = [\n        'audio/webm',\n        'audio/webm;codecs=opus',\n        'audio/ogg;codecs=opus',\n        'audio/wav'\n      ];\n      \n      let selectedMimeType = mimeTypes.find(type => MediaRecorder.isTypeSupported(type)) || 'audio/webm';\n      \n      mediaRecorder.current = new MediaRecorder(stream, {\n        mimeType: selectedMimeType\n      });\n      \n      mediaRecorder.current.ondataavailable = (event) => {\n        if (event.data.size > 0) {\n          setAudioChunks(chunks => [...chunks, event.data]);\n        }\n      };\n\n      mediaRecorder.current.onerror = (event) => {\n        setError('Recording error: ' + event.error.message);\n        stopRecording();\n      };\n\n      mediaRecorder.current.start(1000); // Capture every second for smoother experience\n      setIsRecording(true);\n\n      // Create 8-minute chunks\n      chunkInterval.current = setInterval(() => {\n        if (mediaRecorder.current && mediaRecorder.current.state === 'recording') {\n          mediaRecorder.current.stop();\n          mediaRecorder.current.start(1000);\n        }\n      }, 8 * 60 * 1000); // 8 minutes in milliseconds\n\n    } catch (error) {\n      console.error('Error accessing microphone:', error);\n      setError(error.message || 'Error accessing microphone');\n      setIsRecording(false);\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorder.current) {\n      mediaRecorder.current.stop();\n      clearInterval(chunkInterval.current);\n      mediaRecorder.current.stream.getTracks().forEach(track => track.stop());\n    }\n    setIsRecording(false);\n  };\n\n  const uploadChunk = async (chunk) => {\n    try {\n      // Create a unique filename with timestamp\n      const timestamp = new Date().getTime();\n      const extension = chunk.type.includes('webm') ? 'webm' : \n                       chunk.type.includes('ogg') ? 'ogg' : \n                       chunk.type.includes('wav') ? 'wav' : 'audio';\n      \n      const filename = `audio-chunk-${timestamp}.${extension}`;\n      \n      const formData = new FormData();\n      formData.append('audio', chunk, filename);\n\n      const response = await fetch('http://localhost:55285/transcribe', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`HTTP error! status: ${response.status}, message: ${errorText}`);\n      }\n\n      const result = await response.json();\n      \n      if (result.text && result.text.trim()) {\n        // Update transcriptions with new entry\n        setTranscriptions(prev => [{\n          ...result,\n          timestamp: new Date(result.timestamp).toISOString(),\n          filename: filename // Store filename for reference\n        }, ...prev]);\n\n        // Clear error if successful\n        setError(null);\n      } else {\n        console.warn('Empty transcription received');\n      }\n    } catch (error) {\n      console.error('Error uploading chunk:', error);\n      setError(`Error processing audio: ${error.message}`);\n      \n      // Don't throw, just log and show error to user\n      return null;\n    }\n  };\n\n  // Process audio chunks\n  useEffect(() => {\n    const processChunk = async () => {\n      if (audioChunks.length > 0) {\n        const lastChunk = audioChunks[audioChunks.length - 1];\n        if (lastChunk.size > 0) {\n          await uploadChunk(lastChunk);\n        }\n      }\n    };\n\n    processChunk();\n  }, [audioChunks]);\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-8\">\n      <div className=\"max-w-4xl mx-auto\">\n        <header className=\"text-center mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-800\">Hindi Audio Transcription Tool</h1>\n          <p className=\"text-gray-600 mt-2\">Record and transcribe Hindi audio in real-time</p>\n        </header>\n\n        <div className=\"bg-white rounded-lg shadow-lg p-6 mb-8\">\n          {/* Device Status Indicator */}\n          <div className=\"flex items-center justify-center mb-4\">\n            <div className={`w-3 h-3 rounded-full mr-2 ${\n              deviceStatus === 'available' ? 'bg-green-500' :\n              deviceStatus === 'unavailable' ? 'bg-red-500' :\n              'bg-yellow-500'\n            }`}></div>\n            <span className=\"text-sm text-gray-600\">\n              {deviceStatus === 'available' ? 'Microphone Ready' :\n               deviceStatus === 'unavailable' ? 'No Microphone' :\n               'Checking Device...'}\n            </span>\n          </div>\n\n          {/* Error Message */}\n          {error && (\n            <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\">\n              <span className=\"block sm:inline\">{error}</span>\n            </div>\n          )}\n\n          <div className=\"flex justify-center mb-6\">\n            <button\n              onClick={isRecording ? stopRecording : startRecording}\n              disabled={deviceStatus !== 'available'}\n              className={`px-6 py-3 rounded-full font-semibold text-white ${\n                deviceStatus !== 'available' \n                  ? 'bg-gray-400 cursor-not-allowed' \n                : isRecording \n                  ? 'bg-red-500 hover:bg-red-600' \n                  : 'bg-blue-500 hover:bg-blue-600'\n              }`}\n            >\n              {isRecording ? 'Stop Recording' : 'Start Recording'}\n            </button>\n          </div>\n\n          {isRecording && (\n            <div className=\"text-center text-sm text-gray-600\">\n              <div className=\"recording-indicator inline-block w-2 h-2 bg-red-500 rounded-full mr-2\"></div>\n              Recording in progress... Audio will be processed in 8-minute chunks\n            </div>\n          )}\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-lg p-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">Transcriptions</h2>\n          <div className=\"space-y-4\">\n            {transcriptions.map((trans, index) => (\n              <div key={index} className=\"border-b pb-4\">\n                <p className=\"text-gray-800\">{trans.text}</p>\n                <div className=\"text-sm text-gray-500 mt-2\">\n                  {new Date(trans.timestamp).toLocaleString()} - Duration: {trans.duration}s\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}