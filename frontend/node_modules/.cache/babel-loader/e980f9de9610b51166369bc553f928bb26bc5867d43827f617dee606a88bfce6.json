{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordingId, setRecordingId] = useState(null);\n  const [recordings, setRecordings] = useState([]);\n  const [error, setError] = useState(null);\n  const [deviceStatus, setDeviceStatus] = useState('unchecked');\n  const [recordingDuration, setRecordingDuration] = useState(0);\n  const [audioSource, setAudioSource] = useState('microphone'); // 'microphone' or 'system'\n  const [isProcessing, setIsProcessing] = useState(false);\n  const mediaRecorder = useRef(null);\n  const audioChunks = useRef([]);\n  const durationTimer = useRef(null);\n  useEffect(() => {\n    fetchRecordings();\n    checkAudioDevice();\n  }, []);\n  useEffect(() => {\n    if (isRecording) {\n      durationTimer.current = setInterval(() => {\n        setRecordingDuration(prev => prev + 1);\n      }, 1000);\n    } else {\n      clearInterval(durationTimer.current);\n      setRecordingDuration(0);\n    }\n    return () => clearInterval(durationTimer.current);\n  }, [isRecording]);\n  const fetchRecordings = async () => {\n    try {\n      const response = await fetch('http://localhost:55285/recordings');\n      if (!response.ok) throw new Error('Failed to fetch recordings');\n      const data = await response.json();\n      setRecordings(data.recordings);\n    } catch (error) {\n      console.error('Error fetching recordings:', error);\n      setError('Failed to load recordings');\n    }\n  };\n  const checkAudioDevice = async () => {\n    try {\n      // Check browser support\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n        setDeviceStatus('unavailable');\n        setError('Audio recording is not supported in your browser. Please use a modern browser.');\n        return false;\n      }\n\n      // Check if we're in test mode\n      if (window.location.search.includes('test=true')) {\n        setDeviceStatus('available');\n        setError(null);\n        return true;\n      }\n\n      // List available devices first\n      const devices = await navigator.mediaDevices.enumerateDevices();\n      const hasAudioDevice = devices.some(device => device.kind === 'audioinput');\n      if (!hasAudioDevice) {\n        setDeviceStatus('unavailable');\n        setError('No microphone found. Please connect a microphone and try again.');\n        return false;\n      }\n\n      // Request permission and test device\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true\n        }\n      });\n\n      // Test if we can actually record\n      const mimeTypes = ['audio/webm', 'audio/webm;codecs=opus', 'audio/ogg;codecs=opus', 'audio/wav'];\n      const supportedType = mimeTypes.find(type => MediaRecorder.isTypeSupported(type));\n      if (!supportedType) {\n        stream.getTracks().forEach(track => track.stop());\n        setDeviceStatus('unavailable');\n        setError('Your browser does not support any compatible audio format. Please use a modern browser.');\n        return false;\n      }\n\n      // Test MediaRecorder\n      try {\n        const recorder = new MediaRecorder(stream, {\n          mimeType: supportedType\n        });\n        recorder.stop();\n      } catch (e) {\n        stream.getTracks().forEach(track => track.stop());\n        setDeviceStatus('unavailable');\n        setError('Failed to initialize audio recorder. Please check your browser settings.');\n        return false;\n      }\n\n      // Stop all tracks\n      stream.getTracks().forEach(track => track.stop());\n      setDeviceStatus('available');\n      setError(null);\n      return true;\n    } catch (err) {\n      console.error('Device check error:', err);\n\n      // Handle specific error cases\n      if (err.name === 'NotAllowedError' || err.name === 'PermissionDeniedError') {\n        setError('Microphone access denied. Please allow microphone access in your browser settings.');\n      } else if (err.name === 'NotFoundError') {\n        setError('No microphone found. Please check your microphone connection.');\n      } else if (err.name === 'NotReadableError' || err.name === 'TrackStartError') {\n        setError('Could not access your microphone. Please check if another application is using it.');\n      } else {\n        setError('Could not access audio device. Please check your microphone and browser settings.');\n      }\n      setDeviceStatus('unavailable');\n      return false;\n    }\n  };\n  const startRecording = async () => {\n    try {\n      setError(null);\n      audioChunks.current = [];\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true\n        }\n      });\n      const options = {\n        mimeType: 'audio/webm;codecs=opus',\n        audioBitsPerSecond: 128000\n      };\n      mediaRecorder.current = new MediaRecorder(stream, options);\n      mediaRecorder.current.ondataavailable = event => {\n        if (event.data.size > 0) {\n          audioChunks.current.push(event.data);\n        }\n      };\n      mediaRecorder.current.start(8 * 60 * 1000); // 8 minutes chunks\n      setIsRecording(true);\n    } catch (error) {\n      console.error('Error starting recording:', error);\n      setError(error.message || 'Error starting recording');\n      setIsRecording(false);\n    }\n  };\n  const stopRecording = async () => {\n    try {\n      if (!mediaRecorder.current) return;\n      setIsRecording(false);\n      setIsProcessing(true);\n      mediaRecorder.current.stop();\n      mediaRecorder.current.stream.getTracks().forEach(track => track.stop());\n\n      // Create a single blob from all chunks\n      const audioBlob = new Blob(audioChunks.current, {\n        type: mediaRecorder.current.mimeType\n      });\n\n      // Upload recording\n      const formData = new FormData();\n      formData.append('audio', audioBlob);\n      formData.append('source', audioSource);\n      const response = await fetch('http://localhost:55285/recordings', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Failed to upload recording');\n      }\n      const result = await response.json();\n      setRecordingId(result.recording_id);\n\n      // Poll for completion\n      let attempts = 0;\n      const maxAttempts = 30;\n      while (attempts < maxAttempts) {\n        const statusResponse = await fetch(`http://localhost:55285/recordings/${result.recording_id}`);\n        const statusData = await statusResponse.json();\n        if (statusData.status === 'completed' || statusData.status === 'failed') {\n          break;\n        }\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        attempts++;\n      }\n      await fetchRecordings();\n      audioChunks.current = [];\n    } catch (error) {\n      console.error('Error stopping recording:', error);\n      setError(error.message || 'Error processing recording');\n    } finally {\n      setIsProcessing(false);\n      mediaRecorder.current = null;\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto px-4 py-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"text-center mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-gray-900\",\n          children: \"Hindi Audio Transcription\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mt-2\",\n          children: \"Record and transcribe Hindi audio in real-time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-6 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-3 h-3 rounded-full mr-2 ${deviceStatus === 'available' ? 'bg-green-500' : deviceStatus === 'unavailable' ? 'bg-red-500' : 'bg-yellow-500'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-600\",\n            children: deviceStatus === 'available' ? 'Ready to Record' : deviceStatus === 'unavailable' ? 'Microphone Not Available' : 'Checking Device...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center mb-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline-flex rounded-md shadow-sm\",\n            role: \"group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setAudioSource('microphone'),\n              className: `px-4 py-2 text-sm font-medium rounded-l-lg ${audioSource === 'microphone' ? 'bg-blue-500 text-white' : 'bg-white text-gray-700 hover:bg-gray-50'} border border-gray-200`,\n              children: \"Microphone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setAudioSource('system'),\n              className: `px-4 py-2 text-sm font-medium rounded-r-lg ${audioSource === 'system' ? 'bg-blue-500 text-white' : 'bg-white text-gray-700 hover:bg-gray-50'} border border-l-0 border-gray-200`,\n              children: \"System Audio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-red-50 border-l-4 border-red-400 p-4 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-shrink-0\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"h-5 w-5 text-red-400\",\n                viewBox: \"0 0 20 20\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  fillRule: \"evenodd\",\n                  d: \"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\",\n                  clipRule: \"evenodd\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-3\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-red-700\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: isRecording ? stopRecording : startRecording,\n            disabled: deviceStatus !== 'available' || isProcessing,\n            className: `relative inline-flex items-center px-6 py-3 rounded-full text-white font-medium transition-all ${isProcessing ? 'bg-gray-400 cursor-not-allowed' : isRecording ? 'bg-red-500 hover:bg-red-600' : 'bg-blue-500 hover:bg-blue-600'}`,\n            children: isProcessing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"animate-spin -ml-1 mr-3 h-5 w-5 text-white\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  className: \"opacity-25\",\n                  cx: \"12\",\n                  cy: \"12\",\n                  r: \"10\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  className: \"opacity-75\",\n                  fill: \"currentColor\",\n                  d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this), \"Processing...\"]\n            }, void 0, true) : isRecording ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"animate-pulse mr-2\",\n                children: \"\\u25CF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 19\n              }, this), \"Stop Recording\"]\n            }, void 0, true) : 'Start Recording'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4 text-sm text-gray-600\",\n            children: [\"Recording Duration: \", formatTime(recordingDuration)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Transcriptions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [recordings.map(recording => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-b pb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-start mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-500\",\n                  children: new Date(recording.timestamp).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-700\",\n                  children: [\"Duration: \", Math.round(recording.duration), \"s\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `px-2 py-1 text-xs rounded-full ${recording.status === 'completed' ? 'bg-green-100 text-green-800' : recording.status === 'failed' ? 'bg-red-100 text-red-800' : 'bg-yellow-100 text-yellow-800'}`,\n                children: recording.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this), recording.status === 'completed' && recording.transcript && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-50 rounded p-4 font-hindi\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-800 whitespace-pre-wrap\",\n                children: recording.transcript\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => navigator.clipboard.writeText(recording.transcript),\n                className: \"mt-2 text-sm text-blue-600 hover:text-blue-800\",\n                children: \"Copy Text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 19\n            }, this), recording.status === 'processing' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-center py-4 text-gray-600\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"animate-spin -ml-1 mr-3 h-5 w-5\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                  className: \"opacity-25\",\n                  cx: \"12\",\n                  cy: \"12\",\n                  r: \"10\",\n                  stroke: \"currentColor\",\n                  strokeWidth: \"4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                  className: \"opacity-75\",\n                  fill: \"currentColor\",\n                  d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 21\n              }, this), \"Processing transcription...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 19\n            }, this), recording.status === 'failed' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-red-50 p-4 rounded\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-red-700\",\n                children: recording.error || 'Failed to process recording'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 19\n            }, this)]\n          }, recording.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this)), recordings.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center text-gray-500\",\n            children: \"No recordings yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DiifOw3Aq/Gsqu4mUzsi4NL+ago=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isRecording","setIsRecording","recordingId","setRecordingId","recordings","setRecordings","error","setError","deviceStatus","setDeviceStatus","recordingDuration","setRecordingDuration","audioSource","setAudioSource","isProcessing","setIsProcessing","mediaRecorder","audioChunks","durationTimer","fetchRecordings","checkAudioDevice","current","setInterval","prev","clearInterval","response","fetch","ok","Error","data","json","console","navigator","mediaDevices","getUserMedia","window","location","search","includes","devices","enumerateDevices","hasAudioDevice","some","device","kind","stream","audio","echoCancellation","noiseSuppression","autoGainControl","mimeTypes","supportedType","find","type","MediaRecorder","isTypeSupported","getTracks","forEach","track","stop","recorder","mimeType","e","err","name","startRecording","options","audioBitsPerSecond","ondataavailable","event","size","push","start","message","stopRecording","audioBlob","Blob","formData","FormData","append","method","body","result","recording_id","attempts","maxAttempts","statusResponse","statusData","status","Promise","resolve","setTimeout","formatTime","seconds","mins","Math","floor","secs","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","onClick","viewBox","fill","fillRule","d","clipRule","disabled","xmlns","cx","cy","r","stroke","strokeWidth","map","recording","Date","timestamp","toLocaleString","round","duration","transcript","clipboard","writeText","id","length","_c","$RefreshReg$"],"sources":["/app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordingId, setRecordingId] = useState(null);\n  const [recordings, setRecordings] = useState([]);\n  const [error, setError] = useState(null);\n  const [deviceStatus, setDeviceStatus] = useState('unchecked');\n  const [recordingDuration, setRecordingDuration] = useState(0);\n  const [audioSource, setAudioSource] = useState('microphone'); // 'microphone' or 'system'\n  const [isProcessing, setIsProcessing] = useState(false);\n  const mediaRecorder = useRef(null);\n  const audioChunks = useRef([]);\n  const durationTimer = useRef(null);\n\n  useEffect(() => {\n    fetchRecordings();\n    checkAudioDevice();\n  }, []);\n\n  useEffect(() => {\n    if (isRecording) {\n      durationTimer.current = setInterval(() => {\n        setRecordingDuration(prev => prev + 1);\n      }, 1000);\n    } else {\n      clearInterval(durationTimer.current);\n      setRecordingDuration(0);\n    }\n    return () => clearInterval(durationTimer.current);\n  }, [isRecording]);\n\n  const fetchRecordings = async () => {\n    try {\n      const response = await fetch('http://localhost:55285/recordings');\n      if (!response.ok) throw new Error('Failed to fetch recordings');\n      const data = await response.json();\n      setRecordings(data.recordings);\n    } catch (error) {\n      console.error('Error fetching recordings:', error);\n      setError('Failed to load recordings');\n    }\n  };\n\n  const checkAudioDevice = async () => {\n    try {\n      // Check browser support\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n        setDeviceStatus('unavailable');\n        setError('Audio recording is not supported in your browser. Please use a modern browser.');\n        return false;\n      }\n\n      // Check if we're in test mode\n      if (window.location.search.includes('test=true')) {\n        setDeviceStatus('available');\n        setError(null);\n        return true;\n      }\n\n      // List available devices first\n      const devices = await navigator.mediaDevices.enumerateDevices();\n      const hasAudioDevice = devices.some(device => device.kind === 'audioinput');\n\n      if (!hasAudioDevice) {\n        setDeviceStatus('unavailable');\n        setError('No microphone found. Please connect a microphone and try again.');\n        return false;\n      }\n\n      // Request permission and test device\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true\n        }\n      });\n\n      // Test if we can actually record\n      const mimeTypes = [\n        'audio/webm',\n        'audio/webm;codecs=opus',\n        'audio/ogg;codecs=opus',\n        'audio/wav'\n      ];\n\n      const supportedType = mimeTypes.find(type => MediaRecorder.isTypeSupported(type));\n      if (!supportedType) {\n        stream.getTracks().forEach(track => track.stop());\n        setDeviceStatus('unavailable');\n        setError('Your browser does not support any compatible audio format. Please use a modern browser.');\n        return false;\n      }\n\n      // Test MediaRecorder\n      try {\n        const recorder = new MediaRecorder(stream, { mimeType: supportedType });\n        recorder.stop();\n      } catch (e) {\n        stream.getTracks().forEach(track => track.stop());\n        setDeviceStatus('unavailable');\n        setError('Failed to initialize audio recorder. Please check your browser settings.');\n        return false;\n      }\n\n      // Stop all tracks\n      stream.getTracks().forEach(track => track.stop());\n      \n      setDeviceStatus('available');\n      setError(null);\n      return true;\n\n    } catch (err) {\n      console.error('Device check error:', err);\n      \n      // Handle specific error cases\n      if (err.name === 'NotAllowedError' || err.name === 'PermissionDeniedError') {\n        setError('Microphone access denied. Please allow microphone access in your browser settings.');\n      } else if (err.name === 'NotFoundError') {\n        setError('No microphone found. Please check your microphone connection.');\n      } else if (err.name === 'NotReadableError' || err.name === 'TrackStartError') {\n        setError('Could not access your microphone. Please check if another application is using it.');\n      } else {\n        setError('Could not access audio device. Please check your microphone and browser settings.');\n      }\n      \n      setDeviceStatus('unavailable');\n      return false;\n    }\n  };\n\n  const startRecording = async () => {\n    try {\n      setError(null);\n      audioChunks.current = [];\n\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true\n        }\n      });\n\n      const options = {\n        mimeType: 'audio/webm;codecs=opus',\n        audioBitsPerSecond: 128000\n      };\n\n      mediaRecorder.current = new MediaRecorder(stream, options);\n      \n      mediaRecorder.current.ondataavailable = (event) => {\n        if (event.data.size > 0) {\n          audioChunks.current.push(event.data);\n        }\n      };\n\n      mediaRecorder.current.start(8 * 60 * 1000); // 8 minutes chunks\n      setIsRecording(true);\n\n    } catch (error) {\n      console.error('Error starting recording:', error);\n      setError(error.message || 'Error starting recording');\n      setIsRecording(false);\n    }\n  };\n\n  const stopRecording = async () => {\n    try {\n      if (!mediaRecorder.current) return;\n\n      setIsRecording(false);\n      setIsProcessing(true);\n\n      mediaRecorder.current.stop();\n      mediaRecorder.current.stream.getTracks().forEach(track => track.stop());\n\n      // Create a single blob from all chunks\n      const audioBlob = new Blob(audioChunks.current, { \n        type: mediaRecorder.current.mimeType \n      });\n\n      // Upload recording\n      const formData = new FormData();\n      formData.append('audio', audioBlob);\n      formData.append('source', audioSource);\n\n      const response = await fetch('http://localhost:55285/recordings', {\n        method: 'POST',\n        body: formData\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to upload recording');\n      }\n\n      const result = await response.json();\n      setRecordingId(result.recording_id);\n\n      // Poll for completion\n      let attempts = 0;\n      const maxAttempts = 30;\n\n      while (attempts < maxAttempts) {\n        const statusResponse = await fetch(`http://localhost:55285/recordings/${result.recording_id}`);\n        const statusData = await statusResponse.json();\n\n        if (statusData.status === 'completed' || statusData.status === 'failed') {\n          break;\n        }\n\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        attempts++;\n      }\n\n      await fetchRecordings();\n      audioChunks.current = [];\n\n    } catch (error) {\n      console.error('Error stopping recording:', error);\n      setError(error.message || 'Error processing recording');\n    } finally {\n      setIsProcessing(false);\n      mediaRecorder.current = null;\n    }\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-4xl mx-auto px-4 py-8\">\n        <header className=\"text-center mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900\">Hindi Audio Transcription</h1>\n          <p className=\"text-gray-600 mt-2\">Record and transcribe Hindi audio in real-time</p>\n        </header>\n\n        <div className=\"bg-white rounded-lg shadow-lg p-6 mb-8\">\n          {/* Device Status */}\n          <div className=\"flex items-center justify-center mb-4\">\n            <div className={`w-3 h-3 rounded-full mr-2 ${\n              deviceStatus === 'available' ? 'bg-green-500' :\n              deviceStatus === 'unavailable' ? 'bg-red-500' :\n              'bg-yellow-500'\n            }`}></div>\n            <span className=\"text-sm text-gray-600\">\n              {deviceStatus === 'available' ? 'Ready to Record' :\n               deviceStatus === 'unavailable' ? 'Microphone Not Available' :\n               'Checking Device...'}\n            </span>\n          </div>\n\n          {/* Audio Source Selection */}\n          <div className=\"flex justify-center mb-6\">\n            <div className=\"inline-flex rounded-md shadow-sm\" role=\"group\">\n              <button\n                type=\"button\"\n                onClick={() => setAudioSource('microphone')}\n                className={`px-4 py-2 text-sm font-medium rounded-l-lg ${\n                  audioSource === 'microphone'\n                    ? 'bg-blue-500 text-white'\n                    : 'bg-white text-gray-700 hover:bg-gray-50'\n                } border border-gray-200`}\n              >\n                Microphone\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => setAudioSource('system')}\n                className={`px-4 py-2 text-sm font-medium rounded-r-lg ${\n                  audioSource === 'system'\n                    ? 'bg-blue-500 text-white'\n                    : 'bg-white text-gray-700 hover:bg-gray-50'\n                } border border-l-0 border-gray-200`}\n              >\n                System Audio\n              </button>\n            </div>\n          </div>\n\n          {/* Error Message */}\n          {error && (\n            <div className=\"bg-red-50 border-l-4 border-red-400 p-4 mb-4\">\n              <div className=\"flex\">\n                <div className=\"flex-shrink-0\">\n                  <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n                  </svg>\n                </div>\n                <div className=\"ml-3\">\n                  <p className=\"text-sm text-red-700\">{error}</p>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Recording Controls */}\n          <div className=\"flex flex-col items-center\">\n            <button\n              onClick={isRecording ? stopRecording : startRecording}\n              disabled={deviceStatus !== 'available' || isProcessing}\n              className={`relative inline-flex items-center px-6 py-3 rounded-full text-white font-medium transition-all ${\n                isProcessing \n                  ? 'bg-gray-400 cursor-not-allowed'\n                  : isRecording\n                    ? 'bg-red-500 hover:bg-red-600'\n                    : 'bg-blue-500 hover:bg-blue-600'\n              }`}\n            >\n              {isProcessing ? (\n                <>\n                  <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                  Processing...\n                </>\n              ) : isRecording ? (\n                <>\n                  <span className=\"animate-pulse mr-2\">●</span>\n                  Stop Recording\n                </>\n              ) : (\n                'Start Recording'\n              )}\n            </button>\n\n            {isRecording && (\n              <div className=\"mt-4 text-sm text-gray-600\">\n                Recording Duration: {formatTime(recordingDuration)}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Transcriptions List */}\n        <div className=\"bg-white rounded-lg shadow-lg p-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">Transcriptions</h2>\n          <div className=\"space-y-4\">\n            {recordings.map((recording) => (\n              <div key={recording.id} className=\"border-b pb-4\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <div>\n                    <p className=\"text-sm text-gray-500\">\n                      {new Date(recording.timestamp).toLocaleString()}\n                    </p>\n                    <p className=\"text-gray-700\">\n                      Duration: {Math.round(recording.duration)}s\n                    </p>\n                  </div>\n                  <span className={`px-2 py-1 text-xs rounded-full ${\n                    recording.status === 'completed' ? 'bg-green-100 text-green-800' :\n                    recording.status === 'failed' ? 'bg-red-100 text-red-800' :\n                    'bg-yellow-100 text-yellow-800'\n                  }`}>\n                    {recording.status}\n                  </span>\n                </div>\n\n                {recording.status === 'completed' && recording.transcript && (\n                  <div className=\"bg-gray-50 rounded p-4 font-hindi\">\n                    <p className=\"text-gray-800 whitespace-pre-wrap\">\n                      {recording.transcript}\n                    </p>\n                    <button \n                      onClick={() => navigator.clipboard.writeText(recording.transcript)}\n                      className=\"mt-2 text-sm text-blue-600 hover:text-blue-800\"\n                    >\n                      Copy Text\n                    </button>\n                  </div>\n                )}\n\n                {recording.status === 'processing' && (\n                  <div className=\"flex items-center justify-center py-4 text-gray-600\">\n                    <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg>\n                    Processing transcription...\n                  </div>\n                )}\n\n                {recording.status === 'failed' && (\n                  <div className=\"bg-red-50 p-4 rounded\">\n                    <p className=\"text-red-700\">\n                      {recording.error || 'Failed to process recording'}\n                    </p>\n                  </div>\n                )}\n              </div>\n            ))}\n\n            {recordings.length === 0 && (\n              <p className=\"text-center text-gray-500\">No recordings yet</p>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}