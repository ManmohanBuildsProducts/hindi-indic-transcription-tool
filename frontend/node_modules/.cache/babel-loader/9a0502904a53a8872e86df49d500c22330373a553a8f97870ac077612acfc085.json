{"ast":null,"code":"var _jsxFileName = \"/app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioChunks, setAudioChunks] = useState([]);\n  const [transcriptions, setTranscriptions] = useState([]);\n  const [error, setError] = useState(null);\n  const [deviceStatus, setDeviceStatus] = useState('unchecked'); // 'unchecked' | 'available' | 'unavailable'\n  const mediaRecorder = useRef(null);\n  const chunkInterval = useRef(null);\n  useEffect(() => {\n    // Load existing transcriptions\n    fetchTranscriptions();\n\n    // Check for audio device availability\n    checkAudioDevice();\n  }, []);\n  const checkAudioDevice = async () => {\n    try {\n      const devices = await navigator.mediaDevices.enumerateDevices();\n      const hasAudioDevice = devices.some(device => device.kind === 'audioinput');\n      setDeviceStatus(hasAudioDevice ? 'available' : 'unavailable');\n      setError(hasAudioDevice ? null : 'No audio input device found. Please connect a microphone.');\n    } catch (err) {\n      setDeviceStatus('unavailable');\n      setError('Could not access audio devices. Please check permissions.');\n    }\n  };\n  const fetchTranscriptions = async () => {\n    try {\n      const response = await fetch('http://localhost:55285/transcriptions');\n      const data = await response.json();\n      setTranscriptions(data);\n    } catch (error) {\n      console.error('Error fetching transcriptions:', error);\n    }\n  };\n  const startRecording = async () => {\n    try {\n      setError(null);\n      if (deviceStatus !== 'available') {\n        await checkAudioDevice();\n        if (deviceStatus !== 'available') {\n          throw new Error('Audio device not available');\n        }\n      }\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaRecorder.current = new MediaRecorder(stream);\n      mediaRecorder.current.ondataavailable = event => {\n        if (event.data.size > 0) {\n          setAudioChunks(chunks => [...chunks, event.data]);\n        }\n      };\n      mediaRecorder.current.onerror = event => {\n        setError('Recording error: ' + event.error.message);\n        stopRecording();\n      };\n      mediaRecorder.current.start();\n      setIsRecording(true);\n\n      // Create 8-minute chunks\n      chunkInterval.current = setInterval(() => {\n        if (mediaRecorder.current && mediaRecorder.current.state === 'recording') {\n          mediaRecorder.current.stop();\n          mediaRecorder.current.start();\n        }\n      }, 8 * 60 * 1000); // 8 minutes in milliseconds\n    } catch (error) {\n      console.error('Error accessing microphone:', error);\n      setError(error.message || 'Error accessing microphone');\n      setIsRecording(false);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorder.current) {\n      mediaRecorder.current.stop();\n      clearInterval(chunkInterval.current);\n      mediaRecorder.current.stream.getTracks().forEach(track => track.stop());\n    }\n    setIsRecording(false);\n  };\n  const uploadChunk = async chunk => {\n    const formData = new FormData();\n    formData.append('audio', chunk, 'audio-chunk.webm');\n    try {\n      const response = await fetch('http://localhost:55285/transcribe', {\n        method: 'POST',\n        body: formData\n      });\n      const result = await response.json();\n      setTranscriptions(prev => [result, ...prev]);\n    } catch (error) {\n      console.error('Error uploading chunk:', error);\n    }\n  };\n  useEffect(() => {\n    if (audioChunks.length > 0) {\n      uploadChunk(audioChunks[audioChunks.length - 1]);\n    }\n  }, [audioChunks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"text-center mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-gray-800\",\n          children: \"Hindi Audio Transcription Tool\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mt-2\",\n          children: \"Record and transcribe Hindi audio in real-time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-6 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center mb-6\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: isRecording ? stopRecording : startRecording,\n            className: `px-6 py-3 rounded-full font-semibold text-white ${isRecording ? 'bg-red-500 hover:bg-red-600' : 'bg-blue-500 hover:bg-blue-600'}`,\n            children: isRecording ? 'Stop Recording' : 'Start Recording'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center text-sm text-gray-600\",\n          children: \"Recording in progress... Audio will be processed in 8-minute chunks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Transcriptions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: transcriptions.map((trans, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-b pb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-800\",\n              children: trans.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-500 mt-2\",\n              children: [new Date(trans.timestamp).toLocaleString(), \" - Duration: \", trans.duration, \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aFCIoH/SNjiF7BbcbFH4eYatvwU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","isRecording","setIsRecording","audioChunks","setAudioChunks","transcriptions","setTranscriptions","error","setError","deviceStatus","setDeviceStatus","mediaRecorder","chunkInterval","fetchTranscriptions","checkAudioDevice","devices","navigator","mediaDevices","enumerateDevices","hasAudioDevice","some","device","kind","err","response","fetch","data","json","console","startRecording","Error","stream","getUserMedia","audio","current","MediaRecorder","ondataavailable","event","size","chunks","onerror","message","stopRecording","start","setInterval","state","stop","clearInterval","getTracks","forEach","track","uploadChunk","chunk","formData","FormData","append","method","body","result","prev","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","trans","index","text","Date","timestamp","toLocaleString","duration","_c","$RefreshReg$"],"sources":["/app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioChunks, setAudioChunks] = useState([]);\n  const [transcriptions, setTranscriptions] = useState([]);\n  const [error, setError] = useState(null);\n  const [deviceStatus, setDeviceStatus] = useState('unchecked'); // 'unchecked' | 'available' | 'unavailable'\n  const mediaRecorder = useRef(null);\n  const chunkInterval = useRef(null);\n\n  useEffect(() => {\n    // Load existing transcriptions\n    fetchTranscriptions();\n    \n    // Check for audio device availability\n    checkAudioDevice();\n  }, []);\n\n  const checkAudioDevice = async () => {\n    try {\n      const devices = await navigator.mediaDevices.enumerateDevices();\n      const hasAudioDevice = devices.some(device => device.kind === 'audioinput');\n      setDeviceStatus(hasAudioDevice ? 'available' : 'unavailable');\n      setError(hasAudioDevice ? null : 'No audio input device found. Please connect a microphone.');\n    } catch (err) {\n      setDeviceStatus('unavailable');\n      setError('Could not access audio devices. Please check permissions.');\n    }\n  };\n\n  const fetchTranscriptions = async () => {\n    try {\n      const response = await fetch('http://localhost:55285/transcriptions');\n      const data = await response.json();\n      setTranscriptions(data);\n    } catch (error) {\n      console.error('Error fetching transcriptions:', error);\n    }\n  };\n\n  const startRecording = async () => {\n    try {\n      setError(null);\n      \n      if (deviceStatus !== 'available') {\n        await checkAudioDevice();\n        if (deviceStatus !== 'available') {\n          throw new Error('Audio device not available');\n        }\n      }\n\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      mediaRecorder.current = new MediaRecorder(stream);\n      \n      mediaRecorder.current.ondataavailable = (event) => {\n        if (event.data.size > 0) {\n          setAudioChunks(chunks => [...chunks, event.data]);\n        }\n      };\n\n      mediaRecorder.current.onerror = (event) => {\n        setError('Recording error: ' + event.error.message);\n        stopRecording();\n      };\n\n      mediaRecorder.current.start();\n      setIsRecording(true);\n\n      // Create 8-minute chunks\n      chunkInterval.current = setInterval(() => {\n        if (mediaRecorder.current && mediaRecorder.current.state === 'recording') {\n          mediaRecorder.current.stop();\n          mediaRecorder.current.start();\n        }\n      }, 8 * 60 * 1000); // 8 minutes in milliseconds\n\n    } catch (error) {\n      console.error('Error accessing microphone:', error);\n      setError(error.message || 'Error accessing microphone');\n      setIsRecording(false);\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorder.current) {\n      mediaRecorder.current.stop();\n      clearInterval(chunkInterval.current);\n      mediaRecorder.current.stream.getTracks().forEach(track => track.stop());\n    }\n    setIsRecording(false);\n  };\n\n  const uploadChunk = async (chunk) => {\n    const formData = new FormData();\n    formData.append('audio', chunk, 'audio-chunk.webm');\n\n    try {\n      const response = await fetch('http://localhost:55285/transcribe', {\n        method: 'POST',\n        body: formData,\n      });\n      const result = await response.json();\n      setTranscriptions(prev => [result, ...prev]);\n    } catch (error) {\n      console.error('Error uploading chunk:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (audioChunks.length > 0) {\n      uploadChunk(audioChunks[audioChunks.length - 1]);\n    }\n  }, [audioChunks]);\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-8\">\n      <div className=\"max-w-4xl mx-auto\">\n        <header className=\"text-center mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-800\">Hindi Audio Transcription Tool</h1>\n          <p className=\"text-gray-600 mt-2\">Record and transcribe Hindi audio in real-time</p>\n        </header>\n\n        <div className=\"bg-white rounded-lg shadow-lg p-6 mb-8\">\n          <div className=\"flex justify-center mb-6\">\n            <button\n              onClick={isRecording ? stopRecording : startRecording}\n              className={`px-6 py-3 rounded-full font-semibold text-white ${\n                isRecording \n                  ? 'bg-red-500 hover:bg-red-600' \n                  : 'bg-blue-500 hover:bg-blue-600'\n              }`}\n            >\n              {isRecording ? 'Stop Recording' : 'Start Recording'}\n            </button>\n          </div>\n\n          {isRecording && (\n            <div className=\"text-center text-sm text-gray-600\">\n              Recording in progress... Audio will be processed in 8-minute chunks\n            </div>\n          )}\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-lg p-6\">\n          <h2 className=\"text-xl font-semibold mb-4\">Transcriptions</h2>\n          <div className=\"space-y-4\">\n            {transcriptions.map((trans, index) => (\n              <div key={index} className=\"border-b pb-4\">\n                <p className=\"text-gray-800\">{trans.text}</p>\n                <div className=\"text-sm text-gray-500 mt-2\">\n                  {new Date(trans.timestamp).toLocaleString()} - Duration: {trans.duration}s\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}